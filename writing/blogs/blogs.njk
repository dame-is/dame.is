---
layout: base
title: /blogs
folderType:
---
<div id="blog-feed">
    <h1>/blogs</h1>
    
    <div class="blog-posts">
    {%- if collections.blogs.length > 0 -%}
        {%- for post in collections.blogs -%}
            <article class="blog-post">
                <h2><a href="{{ post.url }}">{{ post.data.title }}</a></h2>
                <p class="blog-post-date" data-date="{{ post.data.date | jsDateString }}">
                    {{ post.data.date | date }} {{ post.data.time }}
                </p>
                <div class="blog-post-excerpt">{{ post.data.excerpt }}</div>
                <a href="{{ post.url }}" class="read-more">Read more â†’</a>
            </article>
        {%- endfor -%}
    {%- else -%}
        <p>No blog posts found.</p>
    {%- endif -%}
    </div>
</div>

<script>
    // Format blog post dates when the page loads
    document.addEventListener('DOMContentLoaded', function() {
        const dateElements = document.querySelectorAll('.blog-post-date');
        dateElements.forEach(element => {
            const dateStr = element.getAttribute('data-date');
            if (dateStr) {
                const date = new Date(dateStr);
                
                // Using the existing formatting functions from main.js
                const dayOfLife = getDaysSinceBirthdate(date);
                
                // Calculate relative time using the Intl.RelativeTimeFormat
                const now = new Date();
                const diffInSeconds = Math.floor((now - date) / 1000);
                
                let relativeTime = 'just now';
                const intervals = [
                    { label: 'year', seconds: 31536000 },
                    { label: 'month', seconds: 2592000 },
                    { label: 'week', seconds: 604800 },
                    { label: 'day', seconds: 86400 },
                    { label: 'hour', seconds: 3600 },
                    { label: 'minute', seconds: 60 },
                    { label: 'second', seconds: 1 }
                ];
                
                for (const interval of intervals) {
                    const count = Math.floor(diffInSeconds / interval.seconds);
                    if (count >= 1) {
                        relativeTime = new Intl.RelativeTimeFormat(undefined, { numeric: 'auto' }).format(-count, interval.label);
                        break;
                    }
                }
                
                // Format the date explicitly for display
                const formattedDate = date.toLocaleDateString(undefined, {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                });
                
                element.textContent = `${relativeTime[0].toUpperCase() + relativeTime.slice(1)}, ${formattedDate} (Day ${dayOfLife})`;
            }
        });
        
        // Ensure the outbound links processor runs after the page loads
        if (typeof processOutboundLinks === 'function') {
            processOutboundLinks();
        }
    });
</script>